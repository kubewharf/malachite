<?xml version="1.0"?>
<byteperf name="top-down" description="This module will collect the top-down performance data of your system. The top-down microarchitecture analysis method based on the top-down characterization methodology aims to provide an insight into whether you have made wise choices with your algorithms and data structures.">

    <module name="cpu">
        <group name="Top-Down">
            <event name="a">UNHALTED_CORE_CYCLES:T</event>
            <event name="b">IDQ_UOPS_NOT_DELIVERED.CORE</event>
            <event name="c">TOPDOWN.SLOTS</event>
            <event name="d">INT_MISC.UOP_DROPPING</event>
            <event name="e">TOPDOWN.BACKEND_BOUND_SLOTS</event>
            <event name="f">INT_MISC.RECOVERY_CYCLES_C1_E1</event>
            <event name="g">UOPS_RETIRED.SLOTS</event>
            <metric name="Frontend_Bound">100*(b-d)/c</metric>
            <metric name="Bad_Speculation">100*(1-(b-d+e+5*f+g)/c)</metric>
            <metric name="Backend_Bound">100*(e+5*f)/c</metric>
            <metric name="Retiring">100*g/c</metric>
        </group>
        <group name="Frontend_Bound">
            <event name="a">UNHALTED_CORE_CYCLES:T</event>
            <event name="b">IDQ_UOPS_NOT_DELIVERED.CORE</event>
            <event name="c">IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV_CORE</event>
            <event name="d">TOPDOWN.SLOTS</event>
            <event name="e">INT_MISC.UOP_DROPPING</event>
            <metric name="Frontend_Latency">(100*5*c)/d</metric>
            <metric name="Frontend_Bandwidth">100*(b-e-5*c)/d</metric>
        </group>
        <group name="Frontend_Latency">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">ICACHE_16B.IFDATA_STALL</event>
            <event name="d">ICACHE_64B.IFTAG_STALL</event>
            <event name="e">INT_MISC.CLEAR_RESTEER_CYCLES</event>
            <event name="f">BACLEARS.ANY</event>
            <event name="g">DSB2MITE_SWITCHES.PENALTY_CYCLES</event>
            <event name="h">IDQ.MS_SWITCHES</event>
            <event name="i">ILD_STALL.LCP</event>
            <metric name="ICache_Misses">100*b/a</metric>
            <metric name="ITLB_Misses">100*d/a</metric>
            <metric name="Branch_Resteers">100*(e+10*f)/a</metric>
            <metric name="DSB_Switches">100*g/a</metric>
            <metric name="MS_Switches">100*3*h/a</metric>
            <metric name="LCP">100*i/a</metric>
        </group>
        <group name="Branch_Resteers">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">INT_MISC.CLEAR_RESTEER_CYCLES</event>
            <event name="c">MACHINE_CLEARS.COUNT</event>
            <event name="d">BR_MISP_RETIRED.ALL_BRANCHES</event>
            <event name="e">BACLEARS.ANY</event>
            <metric name="Mispredicts_Resteers">100*b*(d/(c+d))/a</metric>
            <metric name="Clears_Resteers">100*b*(c/(c+d))/a</metric>
            <metric name="Unknown_Branches_Resteers">100*10*e/a</metric>
        </group>
        <group name="Frontend_Bandwidth">
            <event name="a">CPU_CLK_UNHALTED.DISTRIBUTED</event>
            <event name="b">IDQ.MITE_CYCLES_ANY</event>
            <event name="c">IDQ.MITE_CYCLES_OK</event>
            <event name="d">IDQ.DSB_CYCLES_ANY</event>
            <event name="e">IDQ.DSB_CYCLES_OK</event>
            <event name="f">LSD.CYCLES_ACTIVE</event>
            <event name="g">LSD.CYCLES_OK</event>
            <metric name="MITE">100*(b-c)/a/2</metric>
            <metric name="DSB">100*(d-e)/a/2</metric>
            <metric name="LSD">100*(f-g)/a/2</metric>
        </group>
        <group name="Bad_Speculation">
            <event name="a">IDQ_UOPS_NOT_DELIVERED.CORE</event>
            <event name="b">TOPDOWN.SLOTS</event>
            <event name="c">INT_MISC.UOP_DROPPING</event>
            <event name="d">TOPDOWN.BACKEND_BOUND_SLOTS</event>
            <event name="e">INT_MISC.RECOVERY_CYCLES_C1_E1</event>
            <event name="f">UOPS_RETIRED.SLOTS</event>
            <event name="g">BR_MISP_RETIRED.ALL_BRANCHES</event>
            <event name="h">MACHINE_CLEARS.COUNT</event>
            <metric name="Branch_Mispredicts">100*(g/(g+h))*(1-(a-c+d+5*e+f)/b)</metric>
            <metric name="Machine_Clears">100*(h/(g+h))*(1-(a-c+d+5*e+f)/b)</metric>
        </group>
        <group name="Backend_Bound">
            <event name="a">TOPDOWN.BACKEND_BOUND_SLOTS</event>
            <event name="b">TOPDOWN.SLOTS</event>
            <event name="c">IDQ_UOPS_NOT_DELIVERED.CORE</event>
            <event name="d">UOPS_ISSUED.ANY</event>
            <event name="e">INT_MISC.RECOVERY_CYCLES_C1_E1</event>
            <event name="f">UOPS_RETIRED.SLOTS</event>
            <event name="g">CYCLE_ACTIVITY.STALLS_MEM_ANY</event>
            <event name="h">EXE_ACTIVITY.BOUND_ON_STORES</event>
            <event name="i">EXE_ACTIVITY.1_PORTS_UTIL</event>
            <event name="j">EXE_ACTIVITY.2_PORTS_UTIL</event>
            <event name="k">EXE_ACTIVITY.EXE_BOUND_0_PORTS</event>
            <event name="l">CYCLE_ACTIVITY.STALLS_TOTAL</event>
            <metric name="Memory_Bound">100*((g+h)/(l+h+i+(f/b)*j))*(a+5*e)/b</metric>
            <metric name="Core_Bound">100*(1-(g+h)/(l+h+i+(f/b)))*(a+5*e)/b</metric>
        </group>
        <group name="Memory_Bound">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">CYCLE_ACTIVITY.STALLS_MEM_ANY</event>
            <event name="c">CYCLE_ACTIVITY.STALLS_L1D_MISS</event>
            <event name="d">CYCLE_ACTIVITY.STALLS_L2_MISS</event>
            <event name="e">CYCLE_ACTIVITY.STALLS_L3_MISS</event>
            <event name="f">EXE_ACTIVITY.BOUND_ON_STORES</event>
            <metric name="L1_Bound">100*(b-c)/a</metric>
            <metric name="L2_Bound">100*(c-d)/a</metric>
            <metric name="L3_Bound">100*(d-e)/a</metric>
            <metric name="MEM_Bound">100*e/a</metric>
            <metric name="Stores_Bound">100*f/a</metric>
        </group>
        <group name="L1_Bound">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">DTLB_LOAD_MISSES.STLB_HIT</event>
            <event name="c">DTLB_LOAD_MISSES.WALK_ACTIVE</event>
            <event name="d">LD_BLOCKS.STORE_FORWARD</event>
            <event name="e">MEM_INST_RETIRED.LOCK_LOADS</event>
            <event name="f">MEM_INST_RETIRED.ALL_STORES</event>
            <event name="g">OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO</event>
            <event name="h">CYCLE_ACTIVITY.CYCLES_MEM_ANY</event>
            <event name="i">CYCLE_ACTIVITY.CYCLES_L1D_MISS</event>
            <metric name="DTLB_Load">100*(cops((7*b+c),(h-i),(h-i),(7*b+c))/a)</metric>
            <metric name="Store_Fwd_Blk">100*((13*d)/a)</metric>
            <metric name="Lock_Latency">100*(((e/f)*cops(a,g,g,a))/a)</metric>
        </group>
        <group name="L3_Bound">
            <event name="a">CPU_CLK_UNHALTED.THREAD</event>
            <event name="b">CPU_CLK_UNHALTED.REF_TSC</event>
            <constant name="c">system.tsc_freq</constant>
            <variable name="d">RUNTIME</variable>
            <event name="e">MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM</event>
            <event name="f">OCR.DEMAND_DATA_RD_L3_HIT_SNOOP_HITM</event>
            <event name="g">OCR.DEMAND_DATA_RD_L3_HIT_SNOOP_HIT_NO_FWD</event>
            <event name="h">MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS</event>
            <event name="i">MEM_LOAD_RETIRED.FB_HIT</event>
            <event name="j">MEM_LOAD_RETIRED.L1_MISS</event>
            <event name="k">MEM_LOAD_RETIRED.L3_HIT</event>
            <event name="l">L1D_PEND_MISS.L2_STALL</event>
            <metric name="Contested_Accesses">100*((((48*(((a)/b)*c/(1000)/((d/1000))))-(4*((a/b)*c/1000/((d/1000)))))*(e*(f/(f+g)))+((47.5*(((a)/b)*c/(1000)/((d/1000))))-(4*(((a)/b)*c/(1000)/((d/1000)))))*(h))*(1+(i/(j))/2)/a)</metric>
            <metric name="Data_Sharing">100*(((47.5*(((a)/b)*c/(1000)/((d/1000))))-(4*(((a)/b)*c/(1000)/((d/1000)))))*(e+f*(1-(g/(g+h))))*(1+(i/(j))/2)/(a))</metric>
            <metric name="L3_Latency">100*(((23*(((a)/b)*c/(1000)/((d/1000))))-(4*(((a)/b)*c/(1000)/((d/1000)))))*(k)*(1+(i/(j))/2)/(a))</metric>
            <metric name="SQ_Full">100*(l/a)</metric>
        </group>
        <group name="MEM_Bound">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD_C4</event>
            <event name="c">OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD</event>
            <metric name="MEM_Bandwidth">100*cops(b,a,a,b)/a</metric>
            <metric name="MEM_Latency">100*(cops(c,a,a,c)-cops(b,a,a,b))/a</metric>
        </group>
        <group name="Stores_Bound">
            <event name="a">CPU_CLK_UNHALTED.DISTRIBUTED</event>
            <event name="b">DTLB_STORE_MISSES.STLB_HIT</event>
            <event name="c">DTLB_STORE_MISSES.WALK_ACTIVE</event>
            <metric name="DTLB_Store">100*(7*b+c)/(a)</metric>
        </group>
        <group name="Core_Bound">
            <event name="a">TOPDOWN.SLOTS</event>
            <event name="b">UNHALTED_CORE_CYCLES</event>
            <event name="c">ARITH.DIVIDER_ACTIVE</event>
            <event name="d">EXE_ACTIVITY.EXE_BOUND_0_PORTS</event>
            <event name="e">EXE_ACTIVITY.1_PORTS_UTIL</event>
            <event name="f">EXE_ACTIVITY.2_PORTS_UTIL</event>
            <event name="g">EXE_ACTIVITY.BOUND_ON_STORES</event>
            <event name="h">CYCLE_ACTIVITY.STALLS_MEM_ANY</event>
            <event name="i">CYCLE_ACTIVITY.STALLS_TOTAL</event>
            <event name="i">UOPS_RETIRED.SLOTS</event>
            <metric name="Divider">100*c/b</metric>
            <metric name="Ports_Utilization">100*(cops(c,(i-h),(e+f*i/a)/b,(i-h+e+f*i/a)/b))</metric>
        </group>
        <group name="Ports_Utilization">
            <event name="a">CYCLE_ACTIVITY.STALLS_TOTAL</event>
            <event name="b">CYCLE_ACTIVITY.STALLS_MEM_ANY</event>
            <event name="c">CPU_CLK_UNHALTED.THREAD</event>
            <event name="d">UOPS_EXECUTED.CORE_CYCLES_GE_1</event>
            <event name="e">UOPS_EXECUTED.CORE_CYCLES_GE_2</event>
            <event name="f">UOPS_EXECUTED.CYCLES_GE_3</event>
            <event name="g">EXE_ACTIVITY.1_PORTS_UTIL</event>
            <event name="h">EXE_ACTIVITY.2_PORTS_UTIL</event>
            <constant name="i">system.hyper_threads</constant>
            <metric name="0_Ports_Utilized">100*(a-b)/c</metric>
            <metric name="1_Port_Utilized">100*g/c</metric>
            <metric name="2_Ports_Utilized">100*h/c</metric>
            <metric name="3m_Ports_Utilized">100*(f/c)</metric>
        </group>
        <group name="ALU_Op_Utilization">
            <event name="a">UOPS_DISPATCHED.PORT_0</event>
            <event name="b">UOPS_DISPATCHED.PORT_1</event>
            <event name="c">UOPS_DISPATCHED.PORT_5</event>
            <event name="d">UOPS_DISPATCHED.PORT_6</event>
            <event name="e">UOPS_DISPATCHED.PORT_2_3</event>
            <event name="f">UOPS_DISPATCHED.PORT_4_9</event>
            <event name="g">UOPS_DISPATCHED.PORT_7_8</event>
            <event name="h">CPU_CLK_UNHALTED.DISTRIBUTED</event>
            <metric name="ALU_Op_Utilization">100*(a+b+c+d)/(4*h)</metric>
            <metric name="Port_0">100*a/h</metric>
            <metric name="Port_1">100*b/h</metric>
            <metric name="Port_5">100*c/h</metric>
            <metric name="Port_6">100*d/h</metric>
            <metric name="Load_Op_Utilization">100*e/(2*h)</metric>
            <metric name="Store_Op_Utilization">100*(f+g)/(4*h)</metric>
        </group>
        <group name="Retiring">
            <event name="a">TOPDOWN.SLOTS</event>
            <event name="b">UOPS_RETIRED.SLOTS</event>
            <event name="f">IDQ.MS_UOPS</event>
            <event name="g">UOPS_ISSUED.ANY</event>
            <metric name="Light_Operations">100*(b/a-(b*f/(a*g)))</metric>
            <metric name="Heavy_Operations">100*(b*f/(a*g))</metric>
        </group>
        <group name="Light_Operations">
            <event name="a">UOPS_EXECUTED.X87</event>
            <event name="b">FP_ARITH_INST_RETIRED.SCALAR_SINGLE</event>
            <event name="c">FP_ARITH_INST_RETIRED.SCALAR_DOUBLE</event>
            <event name="d">FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE</event>
            <event name="e">FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE</event>
            <event name="f">FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE</event>
            <event name="g">FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE</event>
            <event name="h">FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE</event>
            <event name="i">FP_ARITH_INST_RETIRED.512B_PACKED_DOUBLE</event>
            <event name="j">UOPS_EXECUTED.THREAD</event>
            <event name="k">UOPS_RETIRED.SLOTS</event>
            <event name="l">TOPDOWN.SLOTS</event>
            <metric name="FP_Arith">100*(((k/l)*a/j)+((b+c)/k)+(d+e+f+g+h+i)/k)</metric>
            <metric name="Other">100*(1-((((k/l)*a/j)+((b+c)/k)+(d+e+f+g+h+i)/k)))</metric>
            <metric name="FP_X87">100*(k/l)*a/j</metric>
            <metric name="FP_Scalar">100*(b+c)/k</metric>
            <metric name="FP_Vector">100*(d+e+f+g+h+i)/k</metric>
        </group>
    </module>

</byteperf>
