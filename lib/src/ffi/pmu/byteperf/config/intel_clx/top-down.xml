<?xml version="1.0"?>
<byteperf name="top-down" description="This module will collect the top-down performance data of your system. The top-down microarchitecture analysis method based on the top-down characterization methodology aims to provide an insight into whether you have made wise choices with your algorithms and data structures.">

    <module name="cpu">
        <group name="Top-Down">
            <event name="a">UNHALTED_CORE_CYCLES:T</event>
            <event name="b">IDQ_UOPS_NOT_DELIVERED.CORE</event>
            <event name="c">UOPS_RETIRED.RETIRE_SLOTS</event>
            <event name="d">INT_MISC.RECOVERY_CYCLES_ANY</event>
            <event name="e">UOPS_ISSUED.ANY</event>
            <constant name="f">system.hyper_threads</constant>
            <metric name="Frontend_Bound">(100*b)/(4*a/f)</metric>
            <metric name="Bad_Speculation">(100*(e-c+(4*d/f)))/(4*a/f)</metric>
            <metric name="Backend_Bound">100-(100*(e+(4*d/f)+b))/(4*a/f)</metric>
            <metric name="Retiring">(100*c)/(4*a/f)</metric>
        </group>
        <group name="Frontend_Bound">
            <event name="a">UNHALTED_CORE_CYCLES:T</event>
            <event name="b">IDQ_UOPS_NOT_DELIVERED.CORE</event>
            <event name="c">IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV_CORE</event>
            <constant name="d">system.hyper_threads</constant>
            <metric name="Frontend_Latency">(100*c)/(a/d)</metric>
            <metric name="Frontend_Bandwidth">(100*(b-4*c))/(4*a/d)</metric>
        </group>
        <group name="Frontend_Latency">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">ICACHE_16B.IFDATA_STALL</event>
            <event name="c">ICACHE_16B.IFDATA_STALL</event>
            <event name="d">ICACHE_64B.IFTAG_STALL</event>
            <event name="e">INT_MISC.CLEAR_RESTEER_CYCLES</event>
            <event name="f">BACLEARS.ANY</event>
            <event name="g">DSB2MITE_SWITCHES.PENALTY_CYCLES</event>
            <event name="h">IDQ.MS_SWITCHES</event>
            <metric name="ICache_Misses">100*(b+2*c)/a</metric>
            <metric name="ITLB_Misses">100*d/a</metric>
            <metric name="Branch_Resteers">100*(e+9*f)/a</metric>
            <metric name="DSB_Switches">100*g/a</metric>
            <metric name="MS_Switches">100*2*h/a</metric>
        </group>
        <group name="Branch_Resteers">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">INT_MISC.CLEAR_RESTEER_CYCLES</event>
            <event name="c">MACHINE_CLEARS.COUNT</event>
            <event name="d">BR_MISP_RETIRED.ALL_BRANCHES</event>
            <event name="e">BACLEARS.ANY</event>
            <metric name="Mispredicts_Resteers">100*b*(d/(c+d))/a</metric>
            <metric name="Clears_Resteers">100*b*(c/(c+d))/a</metric>
            <metric name="Unknown_Branches_Resteers">100*9*e/a</metric>
        </group>
        <group name="Frontend_Bandwidth">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">IDQ.ALL_MITE_CYCLES_ANY_UOPS</event>
            <event name="c">IDQ.ALL_MITE_CYCLES_4_UOPS</event>
            <event name="d">IDQ.ALL_DSB_CYCLES_ANY_UOPS</event>
            <event name="e">IDQ.ALL_DSB_CYCLES_4_UOPS</event>
            <event name="f">LSD.CYCLES_ACTIVE</event>
            <event name="g">LSD.CYCLES_4_UOPS</event>
            <metric name="MITE">100*(b-c)/a</metric>
            <metric name="DSB">100*(d-e)/a</metric>
            <metric name="LSD">100*(f-g)/a</metric>
        </group>
        <group name="Bad_Speculation">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">UNHALTED_CORE_CYCLES:T</event>
            <event name="c">INT_MISC.CLEAR_RESTEER_CYCLES</event>
            <event name="d">BACLEARS.ANY</event>
            <event name="e">UOPS_ISSUED.ANY</event>
            <event name="f">UOPS_RETIRED.RETIRE_SLOTS</event>
            <event name="g">INT_MISC.RECOVERY_CYCLES_ANY</event>
            <event name="h">BR_MISP_RETIRED.ALL_BRANCHES</event>
            <event name="i">MACHINE_CLEARS.COUNT</event>
            <constant name="j">system.hyper_threads</constant>
            <metric name="Branch_Mispredicts">100*(h/(h+i))*(e-f+(4*g/j))/(4*b/j)</metric>
            <metric name="Machine_Clears">(100*(i/(h+i))*(e-f+(4*g/j)))/(4*b/j)</metric>
        </group>
        <group name="Backend_Bound">
            <event name="a">INSTRUCTION_RETIRED</event>
            <event name="b">UNHALTED_CORE_CYCLES</event>
            <event name="c">UNHALTED_CORE_CYCLES:T</event>
            <event name="d">IDQ_UOPS_NOT_DELIVERED.CORE</event>
            <event name="e">UOPS_ISSUED.ANY</event>
            <event name="f">INT_MISC.RECOVERY_CYCLES_ANY</event>
            <event name="g">UOPS_RETIRED.RETIRE_SLOTS</event>
            <event name="h">CYCLE_ACTIVITY.STALLS_MEM_ANY</event>
            <event name="i">EXE_ACTIVITY.BOUND_ON_STORES</event>
            <event name="j">EXE_ACTIVITY.1_PORTS_UTIL</event>
            <event name="k">EXE_ACTIVITY.2_PORTS_UTIL</event>
            <event name="l">EXE_ACTIVITY.EXE_BOUND_0_PORTS</event>
            <constant name="m">system.hyper_threads</constant>
            <metric name="Memory_Bound">100*(1-((e-g+4*(f/m)+d+g)/(4*c/m)))*(h+i)/(l+j+cops((a/b),1.8,l,0)+h+i)</metric>
            <metric name="Core_Bound">100*(1-((e-g+4*(f/m)+d+g)/(4*c/m)))*(1-((h+i)/(l+j+cops((a/b),1.8,l,0)+h+i)))</metric>
        </group>
        <group name="Memory_Bound">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">CYCLE_ACTIVITY.STALLS_MEM_ANY</event>
            <event name="c">CYCLE_ACTIVITY.STALLS_L1D_MISS</event>
            <event name="d">CYCLE_ACTIVITY.STALLS_L2_MISS</event>
            <event name="e">CYCLE_ACTIVITY.STALLS_L3_MISS</event>
            <event name="f">EXE_ACTIVITY.BOUND_ON_STORES</event>
            <metric name="L1_Bound">100*(b-c)/a</metric>
            <metric name="L2_Bound">100*(c-d)/a</metric>
            <metric name="L3_Bound">100*(d-e)/a</metric>
            <metric name="MEM_Bound">100*e/a</metric>
            <metric name="Stores_Bound">100*f/a</metric>
        </group>
        <group name="L1_Bound">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">DTLB_LOAD_MISSES.STLB_HIT</event>
            <event name="c">DTLB_LOAD_MISSES.WALK_ACTIVE</event>
            <event name="d">LD_BLOCKS.STORE_FORWARD</event>
            <event name="e">MEM_INST_RETIRED.LOCK_LOADS</event>
            <event name="f">MEM_INST_RETIRED.ALL_STORES</event>
            <event name="g">OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO</event>
            <metric name="DTLB_Load">100*(7*b+c)/a</metric>
            <metric name="Store_Fwd_Blk">100*((13*d)/a)</metric>
            <metric name="Lock_Latency">100*(((e/f)*cops(a,g,g,a))/a)</metric>
        </group>
        <group name="L3_Bound">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">UNHALTED_CORE_CYCLES:T</event>
            <event name="c">MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM</event>
            <event name="d">MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS</event>
            <event name="e">MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT</event>
            <event name="f">OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD_GE_6</event>
            <event name="g">OFFCORE_REQUESTS_OUTSTANDING.L3_MISS_DEMAND_DATA_RD_GE_6</event>
            <event name="h">OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_DATA_RD</event>
            <event name="i">OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_L3_MISS_DEMAND_DATA_RD</event>
            <event name="j">OFFCORE_REQUESTS_BUFFER.SQ_FULL</event>
            <constant name="k">system.hyper_threads</constant>
            <metric name="Contested_Accesses">100*(60*(c+d)/a)</metric>
            <metric name="Data_Sharing">100*(43*e/a)</metric>
            <metric name="L3_Latency">100*(((cops(h,a,a,h)-cops(i,a,a,i))/a)-((cops(f,a,a,f)-cops(g,a,a,g))/a))</metric>
            <metric name="L3_Bandwidth">100*(cops(f,a,a,f)-cops(g,a,a,g))/a</metric>
            <metric name="SQ_Full">100*(j/k)/(b/k)</metric>
        </group>
        <group name="MEM_Bound">
            <event name="a">UNHALTED_CORE_CYCLES</event>
            <event name="b">OFFCORE_REQUESTS_OUTSTANDING.L3_MISS_DEMAND_DATA_RD_GE_6</event>
            <event name="c">OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_L3_MISS_DEMAND_DATA_RD</event>
            <metric name="MEM_Bandwidth">100*cops(b,a,a,b)/a</metric>
            <metric name="MEM_Latency">100*(cops(c,a,a,c)-cops(b,a,a,b))/a</metric>
        </group>
        <group name="Stores_Bound">
            <event name="a">UNHALTED_CORE_CYCLES:T</event>
            <event name="b">DTLB_STORE_MISSES.STLB_HIT</event>
            <event name="c">DTLB_STORE_MISSES.WALK_ACTIVE</event>
            <constant name="d">system.hyper_threads</constant>
            <metric name="DTLB_Store">100*(7*b+c)/(a/d)</metric>
        </group>
        <group name="Core_Bound">
            <event name="a">INSTRUCTION_RETIRED</event>
            <event name="b">UNHALTED_CORE_CYCLES</event>
            <event name="c">ARITH.DIVIDER_ACTIVE</event>
            <event name="d">EXE_ACTIVITY.EXE_BOUND_0_PORTS</event>
            <event name="e">EXE_ACTIVITY.1_PORTS_UTIL</event>
            <event name="f">EXE_ACTIVITY.2_PORTS_UTIL</event>
            <event name="g">EXE_ACTIVITY.BOUND_ON_STORES</event>
            <event name="h">CYCLE_ACTIVITY.STALLS_MEM_ANY</event>
            <metric name="Divider">100*c/b</metric>
            <metric name="Ports_Utilization">100*(d+e+(cops((a/b),1.8,f,0)+h+g)-h-g)/b</metric>
        </group>
        <group name="Ports_Utilization">
            <event name="a">UNHALTED_CORE_CYCLES:T</event>
            <event name="b">UOPS_EXECUTED.CORE_CYCLES_NONE</event>
            <event name="c">EXE_ACTIVITY.EXE_BOUND_0_PORTS</event>
            <event name="d">UOPS_EXECUTED.CORE_CYCLES_GE_1</event>
            <event name="e">UOPS_EXECUTED.CORE_CYCLES_GE_2</event>
            <event name="f">UOPS_EXECUTED.CORE_CYCLES_GE_3</event>
            <event name="g">EXE_ACTIVITY.1_PORTS_UTIL</event>
            <event name="h">EXE_ACTIVITY.2_PORTS_UTIL</event>
            <constant name="i">system.hyper_threads</constant>
            <metric name="0_Ports_Utilized">100*cops(i,1,(b/2),c)/(a/i)</metric>
            <metric name="1_Port_Utilized">100*cops(i,1,((d-e)/2),g)/(a/i)</metric>
            <metric name="2_Ports_Utilized">100*cops(i,1,((e-f)/2),h)/(a/i)</metric>
            <metric name="3m_Ports_Utilized">100*(f/i)/(a/i)</metric>
        </group>
        <group name="Retiring">
            <event name="a">UNHALTED_CORE_CYCLES:T</event>
            <event name="b">UOPS_RETIRED.RETIRE_SLOTS</event>
            <event name="c">IDQ.MS_UOPS</event>
            <event name="d">UOPS_ISSUED.ANY</event>
            <constant name="e">system.hyper_threads</constant>
            <metric name="Base">100*((b/(4*(a/e)))-((b/d)*c/(4*(a/e))))</metric>
            <metric name="Microcode_Sequencer">100*((b/d)*c/(4*(a/e)))</metric>
        </group>
        <group name="Base">
            <event name="a">UOPS_EXECUTED.X87</event>
            <event name="b">FP_ARITH_INST_RETIRED.SCALAR_SINGLE</event>
            <event name="c">FP_ARITH_INST_RETIRED.SCALAR_DOUBLE</event>
            <event name="d">FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE</event>
            <event name="e">FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE</event>
            <event name="f">FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE</event>
            <event name="g">FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE</event>
            <event name="h">FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE</event>
            <event name="i">FP_ARITH_INST_RETIRED.512B_PACKED_DOUBLE</event>
            <event name="j">UOPS_EXECUTED.THREAD</event>
            <event name="k">UOPS_RETIRED.RETIRE_SLOTS</event>
            <metric name="FP_Arith">100*((a/j)+((b+c+d+e+f+g+h+i)/k))</metric>
            <metric name="Other">100*(1-((a/j)+((b+c+d+e+f+g+h+i)/k)))</metric>
        </group>
        <group name="FP_Arith">
            <event name="a">UOPS_EXECUTED.X87</event>
            <event name="b">FP_ARITH_INST_RETIRED.SCALAR_SINGLE</event>
            <event name="c">FP_ARITH_INST_RETIRED.SCALAR_DOUBLE</event>
            <event name="d">FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE</event>
            <event name="e">FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE</event>
            <event name="f">FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE</event>
            <event name="g">FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE</event>
            <event name="h">FP_ARITH_INST_RETIRED.512B_PACKED_SINGLE</event>
            <event name="i">FP_ARITH_INST_RETIRED.512B_PACKED_DOUBLE</event>
            <event name="j">UOPS_EXECUTED.THREAD</event>
            <event name="k">UOPS_RETIRED.RETIRE_SLOTS</event>
            <metric name="FP_X87">100*a/j</metric>
            <metric name="FP_Scalar">100*(b+c)/k</metric>
            <metric name="FP_Vector">100*(d+e+f+g+h+i)/k</metric>
        </group>
    </module>

</byteperf>
